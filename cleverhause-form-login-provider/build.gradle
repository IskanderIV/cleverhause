plugins {
	id 'org.springframework.boot' version '2.3.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'ru.cleverhause'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.2.1")
	set('springCloudVersion', "Hoxton.SR9")
	set('springSecurityVersion', "5.3.1.RELEASE")
	set('logback_version', '6.3')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'


	// ELK
	implementation "net.logstash.logback:logstash-logback-encoder:${logback_version}"

	// CLOUD
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// JAXB
	runtime('com.sun.xml.bind:jaxb-core:2.3.0.1')
	runtime('com.sun.xml.bind:jaxb-impl:2.3.1')
	runtime('javax.xml.bind:jaxb-api:2.3.1')

	// LOMBOK
	compile 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//UTIL
	implementation 'org.mapstruct:mapstruct:1.4.1.Final'
	implementation 'org.mapstruct:mapstruct-processor:1.4.1.Final'
	implementation 'org.apache.commons:commons-lang3:3.10'
	compile ('com.google.guava:guava:29.0-jre') {
		exclude group:'com.google.guava', module:'guava:28.2-android'
	}

	// TEST
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock:2.1.2.RELEASE")
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.assertj:assertj-core'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.security:spring-security-bom:${springSecurityVersion}"
	}
}

test {
	useJUnitPlatform()
}
